apiVersion: app.m4d.ibm.com/v1alpha2
kind: Blueprint
metadata:
  name: read-and-transform
  namespace: m4d-blueprints
  labels:
spec:
  cluster: thegreendragon
  appSelector: # Selector of the application that uses this workload
    clusterName: thegreendragon
    workloadSelector:
      matchLabels:
        app: demoapp
  # List of modules deployed on the cluster. The modules are deployed in parallel.
  modules:
  # The names are human readable in this example. In the implementation this will differ.
  - name: read-data
    assetID: m4d-notebook-sample/paysim-csv
    templateSpec:
      chart: ghcr.io/mesh-for-data/m4d-arrow-flight-common-read-conf:0.1.0
      m4dModule: arrow-flight-common-read-conf # This is the name of the deployed M4DModule definition
    moduleLabel: "mod: common-arrow-flight-read-service"
    source:
      vault:
        address: http://vault.m4d-system:8200
        authPath: /v1/auth/kubernetes/login
        role: module
        secretPath: /v1/kubernetes-secrets/paysim-csv?namespace=m4d-notebook-sample
      connection:
        s3:
          endpoint: localhost:8001
          bucket: srcbucket
          object: data.parq
    service:
      # name is the release name. It equals to M4DModule.spec.api.endpoint.host if such defined.
      name: common-arrow-flight-read-service
      assetID: m4d-notebook-sample/paysim-csv # Differentiator to original asset for multi user arrow flight service? How to best specify?
      port: 8080
      interfaceDetails:
        protocol: arrow-flight
        dataformat: arrow
    actions: [] # No actions done in this module
  - name: transform-data
    assetID: m4d-notebook-sample/paysim-csv
    templateSpec:
      chart: ghcr.io/mesh-for-data/m4d-transform-conf-arrow-flight:0.1.0
      moduleLabel: "mod: common-transform-arrow-flight"
    source:
      selector: "mod: common-arrow-flight-read-service" # Selector of the dependency
      connection:
        service:
          # name is the release name. It equals to M4DModule.spec.api.endpoint.host if such defined.
          name: common-arrow-flight-read-service
          assetID: m4d-notebook-sample/paysim-csv
          port: 8080
          interfaceDetails:
            protocol: arrow-flight
            dataformat: arrow
    service:
      # name is the release name. It equals to M4DModule.spec.api.endpoint.host if such defined.
      name: common-transform-arrow-flight
      assetID: m4d-notebook-sample/paysim-csv
      port: 8080
      interfaceDetails:
        protocol: arrow-flight
        dataformat: arrow
    actions:
    - action: redact
      column: blood_group
  - name: isolation1
    templateSpec: # Configure here or in “reading” module?
      name: ghcr.io/mesh-for-data/networkpolicy-isolation:0.1.0
    sourceSelector: "mod: common-read-arrow-flight"
    moduleSelector: "mod: common-transform-arrow-flight"
  - name: isolation-transform-to-app
    templateSpec: # Configure here or in “reading” module?
      name: ghcr.io/mesh-for-data/networkpolicy-isolation:0.1.0
    appSelector: "app: demoapp"
    moduleSelector: "mod: common-transform-arrow-flight"
status:
  observedState: Ready
  observedGeneration: 1
  modules:
    - name: read-data
      status: Ready
    - name: transform-data
      status: Ready
    - name: isolation1
      status: Ready
    - name: isolation-transform-to-app
      status: Ready
  # status per dataset
  assets:
  - name: m4d-notebook-sample/paysim-csv
    status: Ready
    # An endpoint will only be specified if there is a read/transform module that exposes an api
    # In the case of e.g. only a copy module in one cluster there is no endpoint.
    endpoint: common-transform-arrow-flight.service-ns # Assume the transform service is deployed in the 'service-ns' namespace.
    port: 8080
    modules:
     - name: read-data
       status: Ready
     - name: transform-step
       status: Ready
  conditions: []
